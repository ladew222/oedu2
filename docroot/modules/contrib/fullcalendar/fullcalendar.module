<?php

/**
 * @file
 * Provides a views style plugin for FullCalendar
 */

/**
 * The minimum supported version of the FullCalendar plugin.
 */
define('FULLCALENDAR_MIN_PLUGIN_VERSION', '1.5.0');

/**
 * Implements hook_theme().
 */
function fullcalendar_theme($existing, $type, $theme, $path) {
  return array(
    'fullcalendar_event' => array(
      'variables' => array(
        'event' => NULL,
        'entity' => NULL,
      ),
      'file' => 'fullcalendar.theme.inc',
    ),
  );
}

/**
 * Implements hook_library_info().
 */
function fullcalendar_library_info() {
  $path = config('fullcalendar.settings')->get('path');
  $libraries['fullcalendar'] = array(
    'title' => 'FullCalendar',
    'website' => 'http://arshaw.com/fullcalendar',
    'version' => fullcalendar_get_version(),
    'js' => array(
      fullcalendar_get_js_path() => array(),
      $path . '/gcal.js' => array(),
    ),
    'css' => array(
      $path . '/fullcalendar.css' => array('media' => 'screen'),
      $path . '/fullcalendar.print.css' => array('media' => 'print'),
    ),
    'dependencies' => array(
      array('system', 'jquery'),
      array('system', 'jquery.ui.draggable'),
      array('system', 'jquery.ui.droppable'),
      array('system', 'jquery.ui.resizable'),
    ),
  );

  $path = drupal_get_path('module', 'fullcalendar');
  $libraries['fullcalendar-module'] = array(
    'title' => 'FullCalendar module',
    'version' => VERSION,
    'js' => array(
      $path . '/js/fullcalendar.library.js' => array('group' => JS_LIBRARY),
      $path . '/js/fullcalendar.views.js' => array(),
    ),
    'css' => array(
      $path . '/css/fullcalendar.theme.css',
    ),
    'dependencies' => array(
      array('system', 'drupal'),
      array('system', 'drupalSettings'),
      array('system', 'jquery.once'),
      array('system', 'jquery.effects.highlight'),
      array('fullcalendar', 'fullcalendar'),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_permission().
 *
 * @return array
 *   An array of valid permissions for the FullCalendar module.
 */
function fullcalendar_permission() {
  return array(
    'update any fullcalendar event' => array(
      'title' => t('Update any FullCalendar event'),
      'description' => t('Allow user to edit events, ignoring other permissions.'),
    ),
  );
}

/**
 * Implements hook_menu().
 *
 * @return array
 *   An array of menu items.
 */
function fullcalendar_menu() {
  $items = array();

  $items['admin/config/user-interface/fullcalendar'] = array(
    'title' => 'FullCalendar',
    'description' => 'Adjust FullCalendar settings.',
    'route_name' => 'fullcalendar_settings',
  );
  $items['admin/config/user-interface/fullcalendar/default'] = array(
    'title' => 'FullCalendar',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_fullcalendar_classes().
 */
function fullcalendar_fullcalendar_classes($entity) {
  $classes = array(
    'fc-event-default',
    $entity->bundle(),
  );

  // Add a class for the date field being used.
  if (isset($entity->fullcalendar_date_field)) {
    $classes[] = "fc-event-field-$entity->fullcalendar_date_field";
  }

  return $classes;
}

/**
 * Implements hook_form_FORM_ID_alter() for views_ui_edit_display_form().
 *
 * Since we force the query to be distinct, reflect that in the UI.
 */
function fullcalendar_form_views_ui_edit_display_form_alter(&$form, &$form_state, $form_id) {
  $style = $form_state['view']->get('executable')->display_handler->getOption('style');
  if ($style['type'] != 'fullcalendar' || empty($form['options']['query']['options']['distinct'])) {
    return;
  }

  $distinct = &$form['options']['query']['options']['distinct'];

  if (!isset($distinct['#description'])) {
    $distinct['#description'] = '';
  }
  else {
    $distinct['#description'] .= '<br>';
  }

  $distinct['#disabled'] = TRUE;
  $distinct['#description'] .= '<strong>' . t('FullCalendar requires that the query be distinct.') . '</strong>';
}

/**
 * Implements hook_fullcalendar_editable().
 *
 * Use our access callback as the editable setting.
 */
function fullcalendar_fullcalendar_editable($entity, $view) {
  return drupal_container()->get('access_check.fullcalendar.update')->check($entity);
}

/**
 * Determines if a given field is a date field.
 *
 * @param object $field
 *   A Views field handler object.
 * @param bool $include_gcal
 *   Boolean indicating whether or not to count gcal fields as a date field.
 *
 * @return bool
 *   Boolean, TRUE if the field is a date field, FALSE otherwise.
 */
function fullcalendar_field_is_date($field, $include_gcal = FALSE) {
  if ($include_gcal && $field->field == 'gcal') {
    return TRUE;
  }

  return isset($field->field_info) && $field->field_info['type'] == 'datetime';
}

/**
 * Returns the version of FullCalendar plugin that is installed.
 *
 * This can be used by other modules' hook_requirements() to ensure that the
 * proper version of FullCalendar plugin is installed.
 *
 * @see version_compare()
 */
function fullcalendar_get_version($fullcalendar_path = NULL) {
  $version = &drupal_static(__FUNCTION__);

  if (empty($version)) {
    $version = 0;
    $pattern = '#FullCalendar v([0-9\.a-z]+)#';

    // No file is passed in so use the default location.
    if (!$fullcalendar_path) {
      $fullcalendar_path = fullcalendar_get_js_path();
    }

    // Return the version of FullCalendar plugin.
    $fullcalendar_plugin = file_get_contents($fullcalendar_path, NULL, NULL, 0, 40);
    if (preg_match($pattern, $fullcalendar_plugin, $matches)) {
      $version = $matches[1];
    }
  }

  return $version;
}

/**
 * Returns the path to the FullCalendar plugin.
 */
function fullcalendar_get_js_path() {
  $fullcalendar_file = array('none' => 'fullcalendar.js', 'min' => 'fullcalendar.min.js');
  $config = config('fullcalendar.settings');
  return $config->get('path') . '/' . $fullcalendar_file[$config->get('compression')];
}
