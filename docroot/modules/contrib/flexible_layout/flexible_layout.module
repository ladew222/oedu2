<?php

/**
 * @file
 * Contains flexible_layout.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function flexible_layout_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the flexible_layout module.
    case 'help.page.flexible_layout':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allows user-created regions without layouts.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_library_info_alter().
 *
 * Dynamically adds user-defined css for bootstrap.
 *
 * @TODO: Need to sort our a way for using current theme without adding twice.
 */
function flexible_layout_library_info_alter(&$libraries, $extension) {
  if ($extension == 'flexible_layout') {
    $bootstrap_settings = \Drupal::config('flexible_layout.settings');
    if ($bootstrap_settings->get('bootstrap.enabled')) {
      $libraries['bootstrap']['css']['theme'] = [
        $bootstrap_settings->get('bootstrap.source') => ['external' => TRUE],
      ];
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function flexible_layout_preprocess_layout(&$variables) {
  if (isset($variables['layout']) && $variables['layout']->id() == 'flexible_layout') {
    $flexible_layout_settings = \Drupal::config('flexible_layout.settings');
    if ($flexible_layout_settings->get('bootstrap.enabled')) {
      $variables['#attached']['library'][] = 'flexible_layout/bootstrap';
    }
    if ($flexible_layout_settings->get('css_grid.enabled')) {
      $variables['#attached']['library'][] = 'flexible_layout/css_grid';
    }
  }
}
