{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
set classes = [
'grid-item',
'medium',
'button-grid',
'animated',
'animated fadeIn'
]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes)}} style='color:{{content.field_text_color['0']['#markup'] | split (' ')[0]}};background-color:{{content.field_background_color['0']['#markup'] | split (' ')[0]}}'>
    {% if content.field_block_link.0 %}
    <a href="{{ content.field_block_link.0['#url']}}">
      {% endif %}
      {% block content %}â€¨
        {% if content.field_entity_ref.0['#entity'].id is empty  %}
          {{ content.field_body|render }}
        {% else %}
          {% if content.field_display_mode[0]['#markup'] == 'Full content' %}
            {{ drupal_entity('node', content.field_entity_ref.0['#entity'].id, 'full_static_') }}
          {% else %}
            {{ drupal_entity('node', content.field_entity_ref.0['#entity'].id, 'teaser') }}
          {% endif %}
        {% endif %}
      {% endblock %}
      {% if content.field_block_link.0 %}
    </a>
    {% endif %}
  </div>
{% endblock paragraph %}
