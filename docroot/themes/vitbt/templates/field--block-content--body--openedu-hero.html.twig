{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @ingroup templates
 *
 * @see template_preprocess_field()
 */
#}
{% if nid == '2' %}
    <style>
      .block--openedu-hero .field--name-body {
        top: 14% !important;
      }
      svg line.l1{
        fill: none;
        stroke: #09d;
        stroke-width: 3;
        stroke-dasharray: 300;
        stroke-dashoffset: 300;
        -webkit-animation: dash 9s linear forwards;
        animation: dash 8s linear forwards;
      }
      @-webkit-keyframes dash {
        to {
          stroke-dashoffset: 0;
        }
      }
      @keyframes dash {
        to {
          stroke-dashoffset: 0;
        }
      }
    </style>
{% endif %}



{%
set classes = [
'field',
'field--name-' ~ field_name|clean_class,
'field--type-' ~ field_type|clean_class,
'field--label-' ~ label_display,
]
%}
{%
set title_classes = [
'field--label',
label_display == 'visually_hidden' ? 'sr-only',
]
%}



{% if multiple %}
  <div{{ attributes.addClass(classes, 'field--item') }}>
  {% if nid == '2' %}
      <svg class="svg" xmlns="http://www.w3.org/2000/svg" style="
    width: 80px;
    margin-left: 180px;
    height: 80px;
    margin-bottom: 50px;
    ">
        <line class="l1" x1="80" y1="0" x2="0" y2="80" style="stroke:rgb(255,255,255);stroke-width:4"></line>
      </svg>
    {% endif %}


    {{ item.content }}

  {% if nid == '2' %}
      <svg class="svg2" xmlns="http://www.w3.org/2000/svg" style="
    width: 80px;
    margin-left: -400px;
    height: 80px;
    margin-top: -50px;
    ">
        <line class="l1" x1="80" y1="0" x2="0" y2="80" style="stroke:rgb(255,255,255);stroke-width:4"></line>
      </svg>
    {% endif %}


  </div>
{% else %}
  {% for item in items %}

    <div{{ attributes.addClass(classes, 'field--item') }}>
    {% if nid == '2' %}
        <svg class="svg" xmlns="http://www.w3.org/2000/svg" style="
    width: 80px;
    margin-left: 180px;
    height: 80px;
    margin-bottom: 50px;
    ">
          <line class="l1" x1="80" y1="0" x2="0" y2="80" style="stroke:rgb(255,255,255);stroke-width:4"></line>
        </svg>
    {% endif %}


      {{ item.content }}
   {% if nid == '2' %}
        <svg class="svg2" xmlns="http://www.w3.org/2000/svg" style="
    width: 80px;
    margin-left: -400px;
    height: 80px;
    margin-top: -50px;
    ">
          <line class="l1" x1="80" y1="0" x2="0" y2="80" style="stroke:rgb(255,255,255);stroke-width:4"></line>
        </svg>
      {% endif %}


    </div>

  {% endfor %}
{% endif %}

